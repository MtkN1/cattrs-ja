# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Tin Tvrtković
# This file is distributed under the same license as the cattrs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: cattrs 24.1.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-24 22:39+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../downloads/cattrs/docs/cattrs.strategies.rst:2
msgid "cattrs.strategies package"
msgstr "cattrs.strategies パッケージ"

#: cattrs.strategies:1 of
msgid "High level strategies for converters."
msgstr "コンバーターの高度な戦略。"

#: cattrs.strategies._unions.configure_tagged_union:1 of
msgid "Configure the converter so that `union` (which should be a union) is un/structured with the help of an additional piece of data in the unstructured payload, the tag."
msgstr "コンバーターを設定して、`union` (ユニオンであるべき) が、構造化されていないペイロード内の追加データであるタグを使って、構造化/非構造化されるようにします。"

#: ../../downloads/cattrs/docs/cattrs.strategies.rst
msgid "Parameters"
msgstr "パラメータ"

#: cattrs.strategies._unions.configure_tagged_union:5 of
msgid "The converter to apply the strategy to."
msgstr "戦略を適用するコンバーター。"

#: cattrs.strategies._unions.configure_tagged_union:6 of
msgid "A `tag_generator` function is used to map each member of the union to a tag, which is then included in the unstructured payload. The default tag generator returns the name of the class."
msgstr "`tag_generator` 関数は、ユニオンの各メンバーをタグにマップするために使用され、そのタグは構造化されていないペイロードに含められます。デフォルトのタグジェネレーターは、クラスの名前を返します。"

#: cattrs.strategies._unions.configure_tagged_union:10 of
msgid "The key under which the tag will be set in the unstructured payload. By default, `'_type'`."
msgstr "タグが構造化されていないペイロードに設定されるキー。デフォルトでは、`'_type'`。"

#: cattrs.strategies._unions.configure_tagged_union:12 of
msgid "An optional class to be used if the tag information is not present when structuring."
msgstr "構造化時にタグ情報が存在しない場合に使用されるオプションのクラス。"

#: ../../downloads/cattrs/docs/cattrs.strategies.rst
msgid "Return type"
msgstr "戻り値の型"

#: cattrs.strategies._unions.configure_tagged_union:15 of
msgid "The tagged union strategy currently only works with the dict un/structuring base strategy."
msgstr "タグ付きユニオン戦略は、現在、dict の非構造化/構造化の基本戦略でのみ機能します。"

#: cattrs.strategies._unions.configure_union_passthrough:1 of
msgid "Configure the converter to support validating and passing through unions of the provided types and their subsets."
msgstr "指定された型とそのサブセットのユニオンを検証して渡すことをサポートするようにコンバーターを設定します。"

#: cattrs.strategies._unions.configure_union_passthrough:4 of
msgid "For example, all mature JSON libraries natively support producing unions of ints, floats, Nones, and strings. Using this strategy, a converter can be configured to efficiently validate and pass through unions containing these types."
msgstr "たとえば、すべての成熟した JSON ライブラリは、int、float、None、および文字列のユニオンをネイティブに生成することをサポートしています。この戦略を使用すると、コンバーターは、これらの型を含むユニオンを効率的に検証して渡すように設定できます。"

#: cattrs.strategies._unions.configure_union_passthrough:8 of
msgid "The most important point is that another library (in this example the JSON library) handles producing the union, and the converter is configured to just validate it."
msgstr "最も重要な点は、別のライブラリ (この例では JSON ライブラリ) がユニオンの生成を処理し、コンバーターはそれを検証するように設定されていることです。"

#: cattrs.strategies._unions.configure_union_passthrough:12 of
msgid "Literals of provided types are also supported, and are checked by value."
msgstr "指定された型のリテラルもサポートされており、値によってチェックされます。"

#: cattrs.strategies._unions.configure_union_passthrough:14 of
msgid "NewTypes of provided types are also supported."
msgstr "指定された型の NewType もサポートされています。"

#: cattrs.strategies._unions.configure_union_passthrough:16 of
msgid "The strategy is designed to be O(1) in execution time, and independent of the ordering of types in the union."
msgstr "この戦略は、実行時間が O(1) であり、ユニオン内の型の順序に依存しないように設計されています。"

#: cattrs.strategies._unions.configure_union_passthrough:19 of
msgid "If the union contains a class and one or more of its subclasses, the subclasses will also be included when validating the superclass."
msgstr "ユニオンにクラスと 1 つ以上のサブクラスが含まれている場合、スーパークラスを検証するときにサブクラスも含まれます。"

#: cattrs.strategies._subclasses.include_subclasses:1 of
msgid "Configure the converter so that the attrs/dataclass `cl` is un/structured as if it was a union of itself and all its subclasses that are defined at the time when this strategy is applied."
msgstr "コンバーターを設定して、attrs/dataclass `cl` が、それ自体とその戦略が適用されたときに定義されているすべてのサブクラスのユニオンであるかのように、構造化/非構造化されるようにします。"

#: cattrs.strategies._subclasses.include_subclasses:5 of
msgid "A base `attrs` or `dataclass` class."
msgstr "ベースとなる `attrs` または `dataclass` クラス。"

#: cattrs.strategies._subclasses.include_subclasses:6 of
msgid "The `Converter` on which this strategy is applied. Do note that the strategy does not work for a :class:`cattrs.BaseConverter`."
msgstr "この戦略が適用される `Converter`。この戦略は、:class:`cattrs.BaseConverter` では機能しないことに注意してください。"

#: cattrs.strategies._subclasses.include_subclasses:8 of
msgid "A tuple of sublcasses whose ancestor is `cl`. If left as `None`, subclasses are detected using recursively the `__subclasses__` method of `cl` and its descendents."
msgstr "祖先が `cl` であるサブクラスのタプル。`None` のままにすると、サブクラスは、`cl` とその子孫の `__subclasses__` メソッドを再帰的に使用して検出されます。"

#: cattrs.strategies._subclasses.include_subclasses:11 of
msgid "A callable of two arguments passed by position (`subclass_union`, `converter`) that defines the union strategy to use to disambiguate the subclasses union. If `None` (the default), the automatic unique field disambiguation is used which means that every single subclass participating in the union must have an attribute name that does not exist in any other sibling class."
msgstr "サブクラスのユニオンを曖昧さ回避するために使用するユニオン戦略を定義する、位置によって渡される 2 つの引数 (`subclass_union`、`converter`) の呼び出し可能オブジェクト。`None` (デフォルト) の場合、自動ユニークフィールド曖昧さ回避が使用されます。これは、ユニオンに参加するすべてのサブクラスが、他の兄弟クラスに存在しない属性名を持っている必要があることを意味します。"

#: cattrs.strategies._subclasses.include_subclasses:17 of
msgid "a mapping of `cl` attribute names to overrides (instantiated with :func:`cattrs.gen.override`) to customize un/structuring."
msgstr "`cl` 属性名から、非構造化/構造化をカスタマイズするためのオーバーライド ( :func:`cattrs.gen.override` でインスタンス化) へのマッピング。"

#: cattrs.strategies._subclasses.include_subclasses:21 of
msgid "When overrides are not provided, hooks for individual classes are retrieved from the converter instead of generated with no overrides, using converter defaults."
msgstr "オーバーライドが提供されていない場合、個々のクラスのフックは、オーバーライドなしで生成される代わりに、コンバーターのデフォルトを使用してコンバーターから取得されます。"

#: cattrs.strategies._class_methods.use_class_methods:1 of
msgid "Configure the converter such that dedicated methods are used for (un)structuring the instance of a class if such methods are available. The default (un)structuring will be applied if such an (un)structuring methods cannot be found."
msgstr "そのようなメソッドが利用可能な場合、クラスのインスタンスを (非) 構造化するために専用のメソッドが使用されるようにコンバーターを設定します。そのような (非) 構造化メソッドが見つからない場合は、デフォルトの (非) 構造化が適用されます。"

#: cattrs.strategies._class_methods.use_class_methods:5 of
msgid "The `Converter` on which this strategy is applied. You can use :class:`cattrs.BaseConverter` or any other derived class."
msgstr "この戦略が適用される `Converter`。:class:`cattrs.BaseConverter` またはその他の派生クラスを使用できます。"

#: cattrs.strategies._class_methods.use_class_methods:7 of
msgid "Optional string with the name of the class method which should be used for structuring. If not provided, no class method will be used for structuring."
msgstr "構造化に使用するクラスメソッドの名前を持つオプションの文字列。提供されていない場合、クラスメソッドは構造化に使用されません。"

#: cattrs.strategies._class_methods.use_class_methods:10 of
msgid "Optional string with the name of the class method which should be used for unstructuring. If not provided, no class method will be used for unstructuring."
msgstr "非構造化に使用するクラスメソッドの名前を持つオプションの文字列。提供されていない場合、クラスメソッドは非構造化に使用されません。"

#: cattrs.strategies._class_methods.use_class_methods:14 of
msgid "If you want to (un)structured nested objects, just append a converter parameter to your (un)structuring methods and you will receive the converter there."
msgstr "ネストされたオブジェクトを (非) 構造化する場合は、(非) 構造化メソッドにコンバーターパラメーターを追加するだけで、そこにコンバーターが表示されます。"

