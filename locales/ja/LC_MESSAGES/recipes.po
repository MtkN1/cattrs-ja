# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Tin Tvrtković
# This file is distributed under the same license as the cattrs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: cattrs 24.1.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-24 22:39+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../downloads/cattrs/docs/recipes.md:1
msgid "Recipes"
msgstr "レシピ"

#: ../../downloads/cattrs/docs/recipes.md:3
msgid "This page contains a collection of recipes for custom un-/structuring mechanisms."
msgstr "この ページでは、カスタムの un-/structuring メカニズムのレシピ集を提供します。"

#: ../../downloads/cattrs/docs/recipes.md:6
msgid "Switching Initializers"
msgstr "イニシャライザの切り替え"

#: ../../downloads/cattrs/docs/recipes.md:8
msgid "When structuring _attrs_ classes, _cattrs_ uses the classes' ``__init__`` method to instantiate objects by default. In certain situations, you might want to deviate from this behavior and use alternative initializers instead."
msgstr "_attrs_ クラスを構造化する際、_cattrs_ はデフォルトでクラスの ``__init__`` メソッドを使用してオブジェクトをインスタンス化します。 特定の状況では、この動作から逸脱して、代わりに代替のイニシャライザを使用したい場合があります。"

#: ../../downloads/cattrs/docs/recipes.md:11
msgid "For example, consider the following `Point` class describing points in 2D space, which offers two `classmethod`s for alternative creation:"
msgstr "たとえば、2D 空間内の点を記述する次の `Point` クラスを考えてみましょう。このクラスは、代替の作成のために 2 つの `classmethod` を提供します。"

#: ../../downloads/cattrs/docs/recipes.md:35
msgid "Selecting an Alternative Initializer"
msgstr "代替イニシャライザの選択"

#: ../../downloads/cattrs/docs/recipes.md:37
msgid "A simple way to _statically_ set one of the `classmethod`s as initializer is to register a structuring hook that holds a reference to the respective callable:"
msgstr "`classmethod` の 1 つをイニシャライザとして _静的に_ 設定する簡単な方法は、それぞれの呼び出し可能オブジェクトへの参照を保持する構造化フックを登録することです。"

#: ../../downloads/cattrs/docs/recipes.md:59
msgid "Now, you can easily structure `Point`s from the specified alternative representation:"
msgstr "これで、指定された代替表現から `Point` を簡単に構造化できます。"

#: ../../downloads/cattrs/docs/recipes.md:71
msgid "Dynamically Switching Between Initializers"
msgstr "イニシャライザ間の動的な切り替え"

#: ../../downloads/cattrs/docs/recipes.md:73
msgid "In some cases, even more flexibility is required and the selection of the initializer must happen at runtime, requiring a dynamic approach. A typical scenario would be when object structuring happens behind an API and you want to let the user specify which representation of the object they wish to provide in their serialization string."
msgstr "場合によっては、さらに柔軟性が必要となり、イニシャライザの選択は実行時に行われる必要があり、動的なアプローチが必要になります。 典型的なシナリオは、オブジェクトの構造化が API の背後で行われ、ユーザーがシリアル化文字列で提供したいオブジェクトの表現を指定できるようにする場合です。"

#: ../../downloads/cattrs/docs/recipes.md:76
msgid "In such situations, the following hook factory can help you achieve your goal:"
msgstr "このような状況では、次のフックファクトリが目標の達成に役立ちます。"

#: ../../downloads/cattrs/docs/recipes.md:115
msgid "Specifying the key that determines the initializer to be used now lets you dynamically select the `classmethod` as part of the object specification itself:"
msgstr "使用するイニシャライザを決定するキーを指定すると、オブジェクト仕様の一部として `classmethod` を動的に選択できます。"

